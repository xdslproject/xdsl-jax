[project]
name = "xdsltemplate"                                       # TODO: Change this
version = "0.1.0"
description = "A template project using xDSL."               # TODO: Change this
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "xdsl>=0.40.0",
]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "License :: OSI Approved :: MIT License",     # TODO: Change this if desired
    "Natural Language :: English",
    "Programming Language :: Python :: 3 :: Only",
    "Typing :: Typed"
]
license = { text = "MIT License" }                # TODO: Change this if desired
authors = []                                                 # TODO: Change this

[project.urls]
Homepage = "https://xdsl.dev/xdsl-template"                  # TODO: Change this
"Source Code" = "https://github.com/xdslproject/xdsl-template" # TODO: Change this
"Issue Tracker" = "https://github.com/xdslproject/xdsl-template/issues" # TODO: Change this


[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "coverage>=7.6.9",
    "pre-commit-hooks>=5.0.0",
    "pre-commit>=4.0.1",
    "pytest>=8.3.4",
    "vulture>=2.14",
]
docs = [
    "mkdocs-material>=9.5.48",
    "mkdocstrings[python]>=0.26.1",
]


[tool.pyright]
reportAssertAlwaysTrue = true
reportUnnecessaryCast = true
reportUnnecessaryIsInstance = true
reportUnnecessaryTypeIgnoreComment = true
typeCheckingMode = "strict"
extraPaths = ["tests"]
"include" = ["docs", "src", "tests"]

[tool.ruff]
# Support Python 3.10+.
target-version = "py310"
src = ["src/", "tests/"]

[tool.ruff.lint]
select = ["E", "F", "W", "I", "UP", "PT", "TID251", "INP", "PYI"]
ignore = [
    "E741",   # https://beta.ruff.rs/docs/rules/ambiguous-variable-name/
    "PT006",  # https://beta.ruff.rs/docs/rules/pytest-parametrize-names-wrong-type/
    "PT011",  # https://beta.ruff.rs/docs/rules/pytest-raises-too-broad/
    "PT012",  # https://beta.ruff.rs/docs/rules/pytest-raises-with-multiple-statements/
    "PYI041", # https://docs.astral.sh/ruff/rules/redundant-numeric-union
]

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.format]
docstring-code-format = true

[tool.bandit]
exclude_dirs = [".venv/"]
skips = ["B101"]

[tool.coverage.run]
branch = true
source = ["src/"]

[tool.coverage.report]
exclude_lines = [
    # Don't complain about missing debug-only code:
    "def __repr__",
    # Don't complain if tests don't hit defensive assertion code:
    "raise NotImplementedError",
    "raise ValueError",
    "raise TypeError",
    "raise RuntimeError",
    "assert_never",
    'if TYPE_CHECKING:',
    'pragma: no cover'
]
format = "markdown"
